<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
      http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    <import resource="context.xml"/>
    <!--  -->
    
    <!-- CSV to XML -->
    
    <bean id = "report" class = "Report" scope="prototype"/>
    <bean id = "itemProcessor" class = "com.yiibai.CustomItemProcessor"/>
    
    <batch:job id = "helloWorldJob">
        <batch:step id = "step1">
            <batch:tasklet>
                <batch:chunk reader = "dbItemReader" writer = "mysqlItemWriter" processor = "itemProcessor" commit-interval="10">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>

	<bean id="dbItemReader" class = "org.springframework.batch.item.database.JdbcCursorItemReader" scope = "step"> 
      <property name = "dataSource" ref = "dataSource" /> 
      <property name = "sql" value = "select * from tutorials_data" /> 
      <property name = "rowMapper"> 
         <bean class = "TutorialRowMapper" /> 
      </property> 
	</bean>

	<bean id="mysqlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
        <property name="resource" value="file:xml/outputs/tutorials.xml" />
        <property name="marshaller" ref="reportMarshaller" />
        <property name="rootTagName" value="Tutorial" />
    </bean>

    <bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>com.yiibai.Tutorial</value>
            </list>
        </property>
    </bean>
    
    
    <!-- XML to MYSQL -->
    <!--    <bean id = "tasklet" class = "com.yiibai.MyTasklet" />   
          <batch:step id = "step1"> 
         <tasklet ref = "tasklet"/>   
      </batch:step>   

    <bean id = "itemProcessor" class = "com.yiibai.CustomItemProcessor" />
    <batch:job id = "helloWorldJob">

        <batch:step id = "step1">
            <batch:tasklet>
                <batch:chunk reader = "xmlItemReader" writer = "mysqlItemWriter" processor = "itemProcessor" commit-interval="10000">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <bean id="xmlItemReader" class="org.springframework.batch.item.xml.StaxEventItemReader">
        <property name="fragmentRootElementName" value="tutorial"/>
        <property name="resource" value="classpath:tutorials.xml"/>
        <property name="unmarshaller" ref="customUnMarshaller"/>
    </bean>
    <bean id="customUnMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
        <property name="aliases">
            <util:map id="aliases">
                <entry key = "tutorial" value ="com.yiibai.Tutorial" />
            </util:map>
        </property>
    </bean>
    <bean id = "mysqlItemWriter" class = "org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name = "dataSource" ref = "dataSource" />
        <property name = "sql">
            <value>
                <![CDATA[insert into testdb.tutorials (tutorial_id, tutorial_author, tutorial_title,
               submission_date, tutorial_icon, tutorial_description)
               values (:tutorial_id, :tutorial_author, :tutorial_title, :submission_date,
               :tutorial_icon, :tutorial_description);]]>
            </value>
        </property>

        <property name = "itemSqlParameterSourceProvider">
            <bean class = "org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </property>
    </bean>
    -->
</beans>